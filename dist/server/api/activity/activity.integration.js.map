{"version":3,"sources":["../../../../server/api/activity/activity.integration.js"],"names":[],"mappings":"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","file":"activity.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newActivity;\n\ndescribe('Activity API:', function() {\n\n  describe('GET /api/activities', function() {\n    var activitys;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/activities')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          activitys = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      activitys.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/activities', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/activities')\n        .send({\n          name: 'New Activity',\n          info: 'This is the brand new activity!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newActivity = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created activity', function() {\n      newActivity.name.should.equal('New Activity');\n      newActivity.info.should.equal('This is the brand new activity!!!');\n    });\n\n  });\n\n  describe('GET /api/activities/:id', function() {\n    var activity;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/activities/' + newActivity._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          activity = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      activity = {};\n    });\n\n    it('should respond with the requested activity', function() {\n      activity.name.should.equal('New Activity');\n      activity.info.should.equal('This is the brand new activity!!!');\n    });\n\n  });\n\n  describe('PUT /api/activities/:id', function() {\n    var updatedActivity;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/activities/' + newActivity._id)\n        .send({\n          name: 'Updated Activity',\n          info: 'This is the updated activity!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedActivity = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedActivity = {};\n    });\n\n    it('should respond with the updated activity', function() {\n      updatedActivity.name.should.equal('Updated Activity');\n      updatedActivity.info.should.equal('This is the updated activity!!!');\n    });\n\n  });\n\n  describe('DELETE /api/activities/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/activities/' + newActivity._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when activity does not exist', function(done) {\n      request(app)\n        .delete('/api/activities/' + newActivity._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}